pipeline {
    agent any
    
    environment{
        def imageName = "python-ui-testing"
        def containerName = "python-ui-testing-${env.BUILD_NUMBER}"
    }
    
    stages {
        
        stage("Clean Up"){
            steps {
                deleteDir()
            }
        }
        
        stage("Clone Repository"){
            steps {
                sh "git clone https://github.com/luisherreraGL/pytest-learning-lab.git"
            }
        }

        stage("Build Image"){
            steps {
                dir('pytest-learning-lab/UI-Testing'){
                    sh "docker build -t ${imageName} . "
                }
            }
        }
        
        stage("Execute test"){
            steps {
                dir('pytest-learning-lab/UI-Testing'){
                    sh "docker run -d --name ${containerName} ${imageName} --alluredir=\"report\" --headless=Y"
                }
            }
        }
        
        stage("Copy Report file"){
            steps {
                dir('pytest-learning-lab/UI-Testing'){
                    sh "rm -rf report; mkdir report"
                    sh "docker cp ${containerName}:/python-ui-testing/report/ ./report/"
                }
            }
        }
     }
    post {
        always {
            echo "Cleanup"
            sh "docker stop ${containerName}"
            sh "docker rm ${containerName}"
            //docker rmi $IMAGE_NAME
            allure([
                    includeProperties: false,
                    jdk: '',
                    properties: [],
                    reportBuildPolicy: 'ALWAYS',
                    results: [[path: '/report']]
            ])
        }
    }
}